<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
        Microsoft ResX Schema

        Version 1.3

        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.

        Example:

        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">1.3</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1">this is my long string</data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            [base64 mime encoded serialized .NET Framework object]
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            [base64 mime encoded string representing a byte array form of the .NET Framework object]
        </data>

        There are any number of "resheader" rows that contain simple 
        name/value pairs.

        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.

        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:

        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.

        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns="" id="root">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="UiMessage_PeriodicSaveFailed">
    <value>Échec de la sauvegarde de données</value>
  </data>
  <data name="UiMessage_PeriodicSaveSuccessful">
    <value>Données sauvegardées avec succès</value>
  </data>
  <data name="WelcomeUi_text">
    <value>Bienvenue dans Himbeertoni Raid Tool, votre compagnon de gestion de groupe de raid.
            Débutez votre voyage en ouvrant le LootMaster en tapant "/lootmaster" (ou "/lm") dans
            le chat (ou en cliquant sur le bouton ci-dessous). Nous y avons déjà ajouté votre
            personnage pour vous. Ensuite, vous pouvez enregistrer votre équipement actuel soit en
            utilisant le bouton
            "loupe", soit en examinant votre personnage via un clic droit. Le plugin mettra
            automatiquement à jour les équipements de chaque personnage qui a
            été ajouté à un onglet solo ou de groupe à chaque fois que vous examinez un de ces
            personnages en jeu. Pour vraiment commencer à utiliser cet outil, vous devrez ajouter
            votre groupe via le
            "bouton +" à droite de l'onglet Solo. Pour ce faire, deux choix s'offrent à vous. "À
            partir de zéro" vous permet de tout configurer manuellement comme un noob. L'autre
            option, supérieure, est de réunir votre groupe au sein d'une équipe et de laisser le
            plugin saisir les données automatiquement en utilisant l'option "À partir de l'Équipe
            actuellement formée". Vous devrez toutefois assigner un nom manuellement, et
            éventuellement donner un surnom aux autres joueur·se·s. Si vous souhaitez, par exemple,
            que le Loot Master s'ouvre au démarrage, je vous
            suggère de jeter un coup d'oeil rapide dans les options. Vous pouvez également aller sur
            le Wiki pour des instructions davantage détaillées :)
        </value>
  </data>
  <data name="WelcomeUi_Title">
    <value>Bienvenue dans Himbeertoni Raid Tool</value>
  </data>
  <data name="ConfigUi_cb_extAutoUpdate">
    <value>Mettre à jour régulièrement les sets depuis {0}</value>
  </data>
  <data name="ConfigUi_hdg_ui">
    <value>Interface utilisateur</value>
  </data>
  <data name="ConfigUi_cb_tt_hideInCombat">
    <value>Cacher toutes les fenêtres pendant que le personnage est en combat</value>
  </data>
  <data name="ConfigUi_cb_hideInCombat">
    <value>Cacher pendant le combat</value>
  </data>
  <data name="ConfigUi_in_autoSaveInterval">
    <value>Intervalle de sauvegarde automatique (min)</value>
  </data>
  <data name="ConfigUi_hdg_AutoSave">
    <value>Sauvegarde automatique</value>
  </data>
  <data name="ConfigUi_cb_periodicSave">
    <value>Sauvegarder régulièrement</value>
  </data>
  <data name="ConfigUi_cb_tt_periodicSave" xml:space="preserve">
        <value>Sauvegarde toutes les données de ce plugin (Aide à empêcher la perte de données si
      votre jeu plante)
    </value>
    </data>
  <data name="WelcomeUi_btn_OpenLootMaster">
    <value>Ouvrir le LootMaster</value>
  </data>
  <data name="WelcomeUi_btn_tt_OpenLootMaster">
    <value>Ouvrir la fenêtre principale de LootMaster (/lootmaster)</value>
  </data>
  <data name="WelcomeUi_btn_OpenOptions">
    <value>Ouvrir les Options</value>
  </data>
  <data name="WelcomeUi_btn_tt_OpenOptions">
    <value>Afficher les options de configuration (/hrt config)</value>
  </data>
  <data name="Welcomeui_btn_openWiki">
    <value>Ouvrir le Wiki</value>
  </data>
  <data name="Welcomeui_btn_tt_openWiki">
    <value>Ouvre le Wiki dans votre navigateur</value>
  </data>
  <data name="WelcomeUi_btn_close">
    <value>Fermer</value>
  </data>
  <data name="WelcomeUi_btn_tt_close">
    <value>Fermer cette fenêtre</value>
  </data>
</root>