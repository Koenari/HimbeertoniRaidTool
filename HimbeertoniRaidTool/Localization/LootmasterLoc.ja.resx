<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
        Microsoft ResX Schema

        Version 1.3

        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.

        Example:

        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">1.3</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1">this is my long string</data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            [base64 mime encoded serialized .NET Framework object]
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            [base64 mime encoded string representing a byte array form of the .NET Framework object]
        </data>

        There are any number of "resheader" rows that contain simple 
        name/value pairs.

        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.

        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:

        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.

        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns="" id="root">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="ConfigUi_cb_ColoredItemNames">
    <value>アイテムレベルでアイテムを色分けする</value>
  </data>
  <data name="Configui_hdg_Colors">
    <value>設定した色</value>
  </data>
  <data name="LootCategory_Greed">
    <value>GREED</value>
  </data>
  <data name="LootRule_Greed">
    <value>GREED</value>
  </data>
  <data name="command_lootmaster">
    <value>LootMaster ウィンドウを開きます ( /lm でも開くことができます)</value>
  </data>
  <data name="LootRule_BISOverUpgrade">
    <value>理想装備 &gt; アップグレード</value>
  </data>
  <data name="ConfigUi_hdg_RolePriority">
    <value>各ロールの戦利品の優先度（小さい方が優先度が高くなります）</value>
  </data>
  <data name="ConfigUi_txt_currentPrio">
    <value>現在の優先度</value>
  </data>
  <data name="LootCategory_Need">
    <value>NEED</value>
  </data>
  <data name="LootCategory_Pass">
    <value>PASS</value>
  </data>
  <data name="LootCategory_Undecided">
    <value>未定</value>
  </data>
  <data name="ui_btn_tt_showConfig">
    <value>設定を開く</value>
  </data>
  <data name="ConfigUi_cb_tt_ColoredItemNames">
    <value>アイテムレベルに応じて色を付ける</value>
  </data>
  <data name="Configui_cb_OpenOnLogin">
    <value>ログイン時にグループ概要を開く</value>
  </data>
  <data name="LootUi_Results_GreedOnly">
    <value>GREED限定</value>
  </data>
  <data name="LootUi_results_btn_tt_Award">
    <value>プレイヤーに与える</value>
  </data>
  <data name="LootUi_Results_ItemAwardedTo">
    <value>獲得者:</value>
  </data>
  <data name="LootUi_Results_btn_tt_Abort">
    <value>戦利品やルールを変更するために、分布を中止します</value>
  </data>
  <data name="LootUi_Results_btn_Abort">
    <value>中断</value>
  </data>
  <data name="LootUi_Results_PossibleItems">
    <value>配布するアイテム</value>
  </data>
  <data name="LootUi_Results_PlayerWonOver">
    <value>オーバー</value>
  </data>
  <data name="LootUi_Results_PlayerWon">
    <value>勝利</value>
  </data>
  <data name="LootResultWindow:Button:AwardGuaranteed">
    <value>全員に与える</value>
  </data>
  <data name="LootResultWindow:Button:AwardGuaranteed:Tooltip">
    <value>各プレイヤーに1つずつ与える</value>
  </data>
  <data name="LootUi_Results_hdg_GuaranteedItems">
    <value>保証アイテム（プレイヤー毎）</value>
  </data>
  <data name="LootSessionUi_btn_tt_Rules">
    <value>設定を上書き</value>
  </data>
  <data name="LootSession_State_DISTRIBUTION_STARTED">
    <value>分配開始</value>
  </data>
  <data name="ConfigUi_hdg_LootRuleOrder">
    <value>戦利品のルールを適用する順序</value>
  </data>
  <data name="LootSession_State_LOOT_CHOSEN">
    <value>戦利品をロック</value>
  </data>
  <data name="LootsessionUi_txt_state">
    <value>現在のステータス</value>
  </data>
  <data name="LootSession_State_FINISHED">
    <value>完了</value>
  </data>
  <data name="CurrentGear">
    <value>現在</value>
  </data>
  <data name="LootSession_text_rolePriority">
    <value>ロールの優先度</value>
  </data>
  <data name="LootSession_heading_results" xml:space="preserve">
        <value>結果: {0} ({1})</value>
        <comment>{0} fight {1} group</comment>
    </data>
  <data name="StatTable_MainStats_Title">
    <value>メインステ</value>
  </data>
  <data name="StatTable_SecondaryStats_Title">
    <value>サブステ</value>
  </data>
  <data name="LootRule_LowestItemLevel">
    <value>最も低いアイテムレベル</value>
  </data>
  <data name="LootRule_Rolling">
    <value>ローリング</value>
  </data>
  <data name="Ui_btn_tt_UpdateFrmEtro">
    <value>Etro.ggから"{0}"を更新</value>
  </data>
  <data name="Ui_btn_newGroupAutomatic" xml:space="preserve">
        <value>現在のグループを編集</value>
    </data>
  <data name="AutoCreatedGroupName">
    <value>自動作成</value>
  </data>
  <data name="Ui_btn_newGroupManual" xml:space="preserve">
        <value>新規作成</value>
    </data>
  <data name="Ui_text_emptyPlayer">
    <value>プレイヤーなし</value>
  </data>
  <data name="Ui_text_openLootSessioon" xml:space="preserve">
        <value>戦利品の配布先：</value>
    </data>
  <data name="LootRule_Need">
    <value>GREEDよりNEED</value>
  </data>
  <data name="Config_hdg_Examples">
    <value>例</value>
  </data>
  <data name="ConfigUi_tab_Appearance" xml:space="preserve">
    <value>外観</value>
  </data>
  <data name="LootSessionUi_resultTable_Col_Pos">
    <value>位置</value>
  </data>
  <data name="LootUI_Results_Rule">
    <value>ルール</value>
  </data>
  <data name="LootUi_Results_hdg_NeededItems">
    <value>必須アイテム</value>
  </data>
  <data name="Ui_btn_tt_PlayerDetails">
    <value>プレイヤーの詳細を表示:</value>
  </data>
</root>