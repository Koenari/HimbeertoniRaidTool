<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
        Microsoft ResX Schema

        Version 1.3

        The primary goals of this format is to allow a simple XML format 
        that is mostly human readable. The generation and parsing of the 
        various data types are done through the TypeConverter classes 
        associated with the data types.

        Example:

        ... ado.net/XML headers & schema ...
        <resheader name="resmimetype">text/microsoft-resx</resheader>
        <resheader name="version">1.3</resheader>
        <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
        <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
        <data name="Name1">this is my long string</data>
        <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
        <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
            [base64 mime encoded serialized .NET Framework object]
        </data>
        <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
            [base64 mime encoded string representing a byte array form of the .NET Framework object]
        </data>

        There are any number of "resheader" rows that contain simple 
        name/value pairs.

        Each data row contains a name, and value. The row also contains a 
        type or mimetype. Type corresponds to a .NET class that support 
        text/value conversion through the TypeConverter architecture. 
        Classes that don't support this are serialized and stored with the 
        mimetype set.

        The mimetype is used for serialized objects, and tells the 
        ResXResourceReader how to depersist the object. This is currently not 
        extensible. For a given mimetype the value must be set accordingly:

        Note - application/x-microsoft.net.object.binary.base64 is the format 
        that the ResXResourceWriter will generate, however the reader can 
        read any of the formats listed below.

        mimetype: application/x-microsoft.net.object.binary.base64
        value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.soap.base64
        value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

        mimetype: application/x-microsoft.net.object.bytearray.base64
        value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns="" id="root">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0,
            Culture=neutral, PublicKeyToken=b77a5c561934e089
        </value>
  </resheader>
  <data name="LootSessionUi_Title">
    <value>Sesión de loot para {0}</value>
  </data>
  <data name="LootRule_Greed">
    <value>Codicia</value>
  </data>
  <data name="command_lootmaster">
    <value>Abre la ventana de LootMaster (o "/lm")</value>
  </data>
  <data name="LootRule_BISOverUpgrade">
    <value>BIS &gt; Mejora</value>
  </data>
  <data name="ConfigUi_hdg_RolePriority">
    <value>Prioridad para obtener botín de cada clase (menor = mas prioridad)</value>
  </data>
  <data name="ConfigUi_txt_currentPrio">
    <value>Prioridad actual</value>
  </data>
  <data name="Configui_cb_OpenOnLogin">
    <value>Abrir resumen de grupo al iniciar sesión</value>
  </data>
  <data name="ConfigUi_hdg_LootRuleOrder">
    <value>Orden en el que deben aplicarse las reglas del loot</value>
  </data>
  <data name="CurrentGear">
    <value>Actual</value>
  </data>
  <data name="LootSession_text_rolePriority">
    <value>Prioridad de rol</value>
  </data>
  <data name="StatTable_MainStats_Title">
    <value>Estadísticas principales</value>
  </data>
  <data name="StatTable_SecondaryStats_Title">
    <value>Estadísticas secundarias</value>
  </data>
  <data name="LootRule_LowestItemLevel">
    <value>Nivel de objetos menor</value>
  </data>
  <data name="LootRule_Rolling">
    <value>Rollear</value>
  </data>
  <data name="Ui_btn_tt_UpdateFrmEtro">
    <value>Actualizar "{0}" desde Etro.gg</value>
  </data>
  <data name="Ui_btn_newGroupAutomatic" xml:space="preserve">
        <value>Del grupo</value>
    </data>
  <data name="Ui_btn_newGroupManual" xml:space="preserve">
        <value>Desde cero</value>
    </data>
  <data name="Ui_text_emptyPlayer">
    <value>Sin jugadores</value>
  </data>
  <data name="Ui_text_openLootSessioon" xml:space="preserve">
        <value>Distribuir el botín para:</value>
    </data>
  <data name="ConfigUi_tab_Appearance" xml:space="preserve">
    <value>Apariencia</value>
  </data>
  <data name="LootSessionUi_resultTable_Col_Pos">
    <value>Draw</value>
  </data>
  <data name="LootUI_Results_Rule">
    <value>Regla</value>
  </data>
  <data name="Ui_btn_tt_PlayerDetails">
    <value>Mostar detalles del jugador para</value>
  </data>
</root>